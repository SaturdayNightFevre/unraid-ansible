---
- name: Start {{ app_name }} container
  community.docker.docker_container:
    image_name_mismatch: "recreate"
    pull: "always"
    name: "{{ app_name }}"
    image: "{{ app_image }}"
    env: "{{ app_default_env | default({}) | combine(app_env | default({})) }}"
    networks: "{{ (app_networks | default([])) | union([{'name': 'web'}] if (app_traefik_enable | default(true) | bool) else []) }}"
    published_ports: "{{ app_published_ports }}"
    labels: >-
      {{ {
        'net.unraid.docker.icon': app_icon_url,
        'net.unraid.docker.managed': 'dockerman',
        'net.unraid.docker.webui': 'https://' + app_name + '.' + DOMAIN,
        'traefik.enable': app_traefik_enable | default(true),
        ('traefik.http.routers.' + app_name + '-router.tls.certresolver'): 'letsencrypt',
        ('traefik.http.services.' + app_name + '.loadbalancer.server.port'): app_port,
        ('traefik.http.routers.' + app_name + '-router.rule'): 'Host(`' + app_name + '.' + DOMAIN + '`)',
        ('traefik.http.routers.' + app_name + '-router.entrypoints'): 'https',
        ('traefik.http.routers.' + app_name + '-router.middlewares'): 'secure'
      } | combine(app_extra_labels | default({})) }}
    log_driver: json-file
    log_options:
      max-file: "1"
      max-size: 10m
    restart_policy: always
    volumes: >-
      {{
        (
          ([app_data_dir + '/' + app_config_dir + ':/config'] if app_config_dir is defined else []) +
          ([dwnlds_dir + ':/downloads:rw'] if dwnlds_dir is defined else []) +
          ([app_media_dir + ':' + app_media_mount + ':rw'] if app_media_dir is defined and app_media_mount is defined else [])
        ) | union(app_volumes | default([]))
      }}
    security_opts:
      - no-new-privileges:true
      - apparmor=docker-default
    read_only: "{{ app_read_only | default(false) }}"
    tmpfs: "{{ app_tmpfs | default([]) }}"
    memory: "1g"
    cpus: 1
    ipc_mode: "{{ app_ipc_mode | default(omit) }}"
    working_dir: "{{ app_working_dir | default(omit) }}"
