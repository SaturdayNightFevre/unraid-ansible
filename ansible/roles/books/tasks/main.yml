---
#- name: Set permissions for library config directory
  #ansible.builtin.include_tasks: "../../../shared-tasks/permissions.yml"
  #vars:
    #target_dir: "{{ app_data_dir }}/calibre-web/"
#
#- name: Set permissions for custom scripts directory
  #ansible.builtin.include_tasks: "../../../shared-tasks/permissions.yml"
  #vars:
    #target_dir: "{{ app_data_dir }}/custom-scripts/"

- name: Start library container
  community.docker.docker_container:
    image_name_mismatch: "recreate"
    pull: "always"
    name: library
    image: linuxserver/calibre-web:0.6.21
    networks:
      - name: web
    env:
      PUID: "{{ PUID }}"
      PGID: "{{ PGID }}"
      TZ: "{{timezone}}"
      DOCKER_MODS: "linuxserver/mods:universal-calibre"
      OAUTHLIB_RELAX_TOKEN_SCOPE: "1"
    labels:
      net.unraid.docker.icon: "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/calibre-web-logo.png"
      net.unraid.docker.managed: "dockerman"
      net.unraid.docker.webui: "http://[IP]:[PORT:8083]"
    log_driver: json-file
    log_options:
      max-file: "1"
      max-size: 10m
    ports:
      - "8083:8083/tcp"
    volumes:
      - "{{ app_data_dir }}/calibre-web:/config"
      - "{{ media_dir }}/Books/Calibre Library:/books"
      - "{{ app_data_dir }}/custom-scripts/calibre-web:/custom-cont-init.d:ro"
      - "{{ app_data_dir }}/calibre-web/gmail.json:/gmail.json:ro"
    restart_policy: unless-stopped
    working_dir: "/"
    security_opts:
      - no-new-privileges:true
      - apparmor=docker-default
    #read_only: true
    #tmpfs:
      #- "/run:exec"
    memory: "1g"
    cpus: 1

#- name: Set permissions for book directory
  #ansible.builtin.include_tasks: "../../../shared-tasks/permissions.yml"
  #vars:
    #target_dir: "{{ media_dir }}/Books/"
#
#- name: Set permissions for book config
  #ansible.builtin.include_tasks: "../../../shared-tasks/permissions.yml"
  #vars:
    #target_dir: "{{ app_data_dir }}/readarr/"

- name: Start books container
  community.docker.docker_container:
    image_name_mismatch: "recreate"
    pull: "always"
    name: books
    image: lscr.io/linuxserver/readarr:0.3.17-develop
    networks:
      - name: web
    env:
      PUID: "{{ PUID }}"
      PGID: "{{ PGID }}"
      TZ: "{{timezone}}"
    volumes:
      - "{{ app_data_dir }}/readarr/:/config"
      - "{{ media_dir }}/Books/Calibre Library:/books"
      - "{{ dwnlds_dir }}:/downloads"
    ports:
      - "8787:8787"
    restart_policy: unless-stopped
    log_driver: json-file
    log_options:
      max-file: "1"
      max-size: 10m
    labels:
      net.unraid.docker.icon: "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/readarr-logo.png"
      net.unraid.docker.managed: "dockerman"
      net.unraid.docker.webui: "http://[IP]:[PORT:8787]"
    security_opts:
      - no-new-privileges:true
      - apparmor=docker-default
    #read_only: true
    #tmpfs:
      #- "/run:exec"
    memory: "1g"
    cpus: 1

#- name: Set permissions for book config
  #ansible.builtin.include_tasks: "../../../shared-tasks/permissions.yml"
  #vars:
    #target_dir: "{{ app_data_dir }}/calibre/"

- name: Start calibre container
  community.docker.docker_container:
    image_name_mismatch: "recreate"
    pull: "always"
    name: calibre
    image: linuxserver/calibre:7.5.1
    env:
      PUID: "{{ PUID }}"
      PGID: "{{ PGID }}"
      TZ: "{{timezone}}"
    volumes:
      - "{{ app_data_dir }}/calibre/config:/config"
      - "{{ app_data_dir }}/calibre/upload:/uploads"
      - "{{ app_data_dir }}/calibre/plugins:/plugins"
      - "{{ media_dir }}/Books/Calibre Library:/Calibre_Library"
    ports:
      - "8080:8087"
      - "8081:8081"
    restart_policy: unless-stopped
    log_driver: json-file
    log_options:
      max-file: "1"
      max-size: 10m
    networks:
      - name: web
    labels:
      net.unraid.docker.icon: "https://raw.githubusercontent.com/kovidgoyal/calibre/master/resources/images/lt.png?raw=true"
      net.unraid.docker.managed: "dockerman"
      net.unraid.docker.webui: "http://[IP]:[PORT:8080]"
    security_opts:
      - no-new-privileges:true
      - apparmor=docker-default
    #read_only: true
    #tmpfs:
      #- "/run:exec"
    memory: "1g"
    cpus: 1

