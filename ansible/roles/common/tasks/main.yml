---
- name: Create directory for virtual environment
  ansible.builtin.file:
    path: "/opt/ansible_venv"
    state: directory
    mode: '0755'

- name: Install Python venv module if not present
  ansible.builtin.command: python3 -m pip install virtualenv
  changed_when: false
  ignore_errors: true  # Continue even if this fails

- name: Create Python virtual environment
  ansible.builtin.command: python3 -m venv /opt/ansible_venv
  args:
    creates: /opt/ansible_venv/bin/python
  register: venv_created

- name: Upgrade pip in virtual environment
  ansible.builtin.command: /opt/ansible_venv/bin/pip install --upgrade pip
  changed_when: true
  when: venv_created.changed

- name: Install required Python packages in virtual environment
  ansible.builtin.pip:
    name: 
      - psycopg2-binary
      - requests==2.31.0
    state: present
    virtualenv: /opt/ansible_venv
  register: pip_install

- name: Set fact for Python interpreter path
  ansible.builtin.set_fact:
    ansible_python_interpreter: /opt/ansible_venv/bin/python

- name: Check if Docker is installed
  ansible.builtin.command: docker --version
  register: docker_check
  ignore_errors: true
  changed_when: false

- name: Fail if Docker is not installed
  ansible.builtin.fail:
    msg: "Docker is not installed. Please install Docker before running this playbook."
  when: docker_check.rc != 0 and docker_check.changed

- name: Check if directory exists {{ app_data_dir }}
  ansible.builtin.stat:
    path: "{{ app_data_dir }}"
  register: appdata_dir_check

- name: Fail if directory does not exist {{ app_data_dir }}
  ansible.builtin.fail:
    msg: "Directory {{ app_data_dir }} does not exist. Please create it before continuing."
  when: not appdata_dir_check.stat.exists

- name: Create bridge network (internal)
  community.docker.docker_network:
    name: bridge
    internal: true
    state: present

- name: Create web network (external)
  community.docker.docker_network:
    name: web
    internal: false
    state: present
