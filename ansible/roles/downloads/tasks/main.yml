#- name: Set permissions for Downloads config
#ansible.builtin.include_tasks: "../../../shared-tasks/permissions.yml"
#vars:
#target_dir: "{{ app_data_dir }}/deluge"
#
#- name: Set permissions for Downloads directory
#ansible.builtin.include_tasks: "../../../shared-tasks/permissions.yml"
#vars:
#target_dir: "{{ dwnlds_dir }}"

- name: Start Gluetun container
  community.docker.docker_container:
    name: gluetun
    image: qmcgaw/gluetun:v3
    restart_policy: always
    networks:
      - name: web
    capabilities:
      - NET_ADMIN
    volumes:
      - "{{ app_data_dir }}/gluetun:/gluetun"
    env:
      VPN_SERVICE_PROVIDER: "private internet access"
      OPENVPN_USER: "{{ OPENVPN_USER }}"
      OPENVPN_PASSWORD: "{{ OPENVPN_PASSWORD }}"
      SERVER_REGIONS: "Netherlands"
      VPN_PORT_FORWARDING: "on"
      FIREWALL_OUTBOUND_SUBNETS: "{{ subnet }}"
      BLOCK_MALICIOUS: "on"
      BLOCK_SURVEILLANCE: "on"
      BLOCK_ADS: "on"
      UPDATER_PERIOD: "24h"
    #ports:
      #- "8112:8112"
      #- "9696:9696"
      #- "58846:58846"
    published_ports: ["8112:8112", "9696:9696", "58846:58846"]
    labels:
      traefik.enable: "true"
      # Deluge Traefik Labels
      traefik.http.services.deluge.loadbalancer.server.port: "8112"
      traefik.http.routers.deluge-router.rule: "Host(`downloads.{{ domain }}`)"
      traefik.http.routers.deluge-router.entrypoints: "https"
      traefik.http.routers.deluge-router.middlewares: "authentik@docker"
      traefik.http.routers.deluge-router.tls.certresolver: "letsencrypt"
      traefik.http.routers.deluge-router.service: "deluge"
      # Prowlarr Traefik Labels
      traefik.http.services.prowlarr.loadbalancer.server.port: "9696"
      traefik.http.routers.prowlarr-router.rule: "Host(`torrents.{{ domain }}`)"
      traefik.http.routers.prowlarr-router.entrypoints: "https"
      traefik.http.routers.prowlarr-router.middlewares: "authentik@docker"
      traefik.http.routers.prowlarr-router.tls.certresolver: "letsencrypt"
      traefik.http.routers.prowlarr-router.service: "prowlarr"
      # Unraid Labels
      net.unraid.docker.icon: "https://raw.githubusercontent.com/qdm12/gluetun/master/doc/logo_256.png"
      net.unraid.docker.managed: "dockerman"

- name: Start Deluge container
  community.docker.docker_container:
    name: deluge
    image: linuxserver/deluge:2.2.0
    restart_policy: always
    network_mode: "container:gluetun"
    env:
      PUID: "{{ PUID }}"
      PGID: "{{ PGID }}"
      TZ:  "{{ timezone }}"
      DELUGE_LOGLEVEL: "debug"   # Optional
    volumes:
      - "{{ app_data_dir }}/deluge:/config"
      - "{{ dwnlds_dir }}:/downloads"
    security_opts:
      - no-new-privileges:true
      - apparmor=docker-default
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8112/", "--connect-timeout", "10", "--max-time", "10"]
      interval: 30s
      timeout: 15s
      retries: 3
      start_period: 60s
    labels:
      net.unraid.docker.icon: "https://deluge-torrent.org/images/deluge_logo.png"
      net.unraid.docker.managed: "dockerman"
      net.unraid.docker.webui: "https://downloads.{{ domain }}"

- name: Start Gluetun Deluge Port Manager container
  community.docker.docker_container:
    name: gluetun-deluge-port-manager
    image: plaexmstr/gluetun-deluge-port-manager
    restart_policy: always
    volumes:
      - "{{ app_data_dir }}/gluetun:/gluetun"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    network_mode: "container:gluetun"
    env:
      DELUGE_PORT: "8112"
      PORT_FORWARDED: "/tmp/gluetun/piaportforward.json"

- name: Start Prowlarr container
  community.docker.docker_container:
    name: torrents
    image: lscr.io/linuxserver/prowlarr:1.25.4
    restart_policy: always
    network_mode: "container:gluetun"
    env:
      PUID: "{{ PUID }}"
      PGID: "{{ PGID }}"
      TZ: "{{ timezone }}"
    volumes:
      - "{{ app_data_dir }}/prowlarr:/config"
    labels:
      net.unraid.docker.icon: "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/prowlarr-banner.png"
      net.unraid.docker.managed: "dockerman"
      net.unraid.docker.webui: "https://torrents.{{ domain }}"

- name: Start FlareSolverr container
  community.docker.docker_container:
    name: flaresolverr
    image: ghcr.io/flaresolverr/flaresolverr:latest
    restart_policy: always
    networks:
      - name: web
    ports:
      - "8191:8191"
    env:
      LOG_LEVEL: "info"
      LOG_HTML: "false"
      CAPTCHA_SOLVER: "none"
      TZ: "{{ timezone }}"
    security_opts:
      - no-new-privileges:true
      - apparmor=docker-default
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8191/", "--connect-timeout", "5"]
      interval: 30s
      timeout: 15s
      retries: 3
      start_period: 30s
    labels:
      net.unraid.docker.icon: "https://raw.githubusercontent.com/FlareSolverr/FlareSolverr/master/resources/flaresolverr_logo.png"
      net.unraid.docker.managed: "dockerman"
      net.unraid.docker.webui: "https://flaresolverr.{{ domain }}"
      traefik.enable: "true"
      traefik.http.routers.flaresolverr.rule: "Host(`flaresolverr.{{ domain }}`)"
      traefik.http.routers.flaresolverr.entrypoints: "https"
      traefik.http.routers.flaresolverr.middlewares: "authentik@docker"
      traefik.http.routers.flaresolverr.tls.certresolver: "letsencrypt"
      traefik.http.services.flaresolverr.loadbalancer.server.port: "8191"
      traefik.docker.network: "web"
