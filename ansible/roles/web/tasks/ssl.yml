---
    - name: Ensure SSL directory exists
      file:
        path: /etc/ssl/johnflix
        state: directory
        mode: '0755'

    - name: Check if wildcard certificate exists
      stat:
        path: /etc/ssl/johnflix/wildcard.johnflix.uk.crt
      register: cert_stat

    - name: Get certificate expiration date
      command: "openssl x509 -enddate -noout -in /etc/ssl/johnflix/wildcard.johnflix.uk.crt"
      register: cert_expiry
      when: cert_stat.stat.exists
      changed_when: false
      ignore_errors: true

    - name: Parse expiration date
      set_fact:
        cert_expiry_date: "{{ cert_expiry.stdout | regex_replace('notAfter=', '') | trim }}"
      when: cert_expiry.stdout is defined

    - name: Convert expiration date to epoch
      command: "date -d '{{ cert_expiry_date }}' +%s"
      register: cert_expiry_epoch
      when: cert_expiry_date is defined
      changed_when: false

    - name: Get current date in epoch
      command: "date +%s"
      register: current_date_epoch
      changed_when: false

    - name: Calculate days until expiration
      set_fact:
        days_until_expiry: "{{ ((cert_expiry_epoch.stdout | int) - (current_date_epoch.stdout | int)) // 86400 }}"
      when: cert_expiry_epoch.stdout is defined and current_date_epoch.stdout is defined

    - name: Display certificate expiration status
      debug:
        msg: "Wildcard certificate expires in {{ days_until_expiry }} days."
      when: days_until_expiry is defined
    
    - name: Create OpenSSL configuration for SAN
      copy:
        dest: "/tmp/openssl_san.cnf"
        content: |
          [ req ]
          default_bits       = 4096
          prompt            = no
          default_md        = sha256
          req_extensions    = req_ext
          distinguished_name = dn

          [ dn ]
          CN = *.johnflix.uk

          [ req_ext ]
          subjectAltName = @alt_names

          [ alt_names ] #TODO: define all services here and figure out how to loop through a list in the pihold dns config
          DNS.1 = *.johnflix.uk
          DNS.2 = johnflix.uk
          {% for prefix in local_dns %}
          DNS.{{ loop.index + 2 }} = {{ prefix }}.johnflix.uk
          {% endfor %}
      when: not cert_stat.stat.exists or (days_until_expiry is defined and days_until_expiry | int <= 30)

    - name: Generate new certificate if missing or expiring within 30 days
      shell: >
        openssl req -x509 -nodes -newkey rsa:4096 -keyout /etc/ssl/johnflix/wildcard.johnflix.uk.key
        -out /etc/ssl/johnflix/wildcard.johnflix.uk.crt -days 365
        -config /tmp/openssl_san.cnf
      when: not cert_stat.stat.exists or (days_until_expiry is defined and days_until_expiry | int <= 30)


    - name: Display certificate paths
      debug:
        msg: |
          The self-signed wildcard certificate has been created successfully!
          You can download it from:
            Certificate: /etc/ssl/johnflix/wildcard.{{ domain }}.crt
            Private Key: /etc/ssl/johnflix/wildcard.{{ domain }}.key
          To install it on your local machine, copy the `.crt` file and add it to your trusted certificates.
