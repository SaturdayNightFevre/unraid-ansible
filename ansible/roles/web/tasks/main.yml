---
- name: Ensure the traefik directory exists
  file:
    path: "{{ app_data_dir }}/traefik-new/"
    state: directory
    mode: '0755'

- name: Ensure the Traefik configuration directory exists
  ansible.builtin.file:
    path: "{{ app_data_dir }}traefik-new/data"
    state: directory
    owner: root
    group: root
    mode: '0755'

- name: Deploy the Traefik configuration using a template
  ansible.builtin.template:
    src: "traefik.yml.j2"  # Assuming it is located in the role's templates folder
    dest: "{{ app_data_dir }}traefik-new/data/traefik.yml"  # Full path to the destination file
    owner: root
    group: root
    mode: '0644'
    backup: false  # Optional: Backup the previous file

- name: Ensure the acme.json file exists in {{ app_data_dir }}traefik-new/data/acme.json
  ansible.builtin.stat:
    path: "{{ app_data_dir }}traefik-new/data/acme.json"
  register: acme_file_stat

- name: Create the acme.json file if it doesn't exist
  ansible.builtin.file:
    path: "{{ app_data_dir }}traefik-new/data/acme.json"
    state: touch
    owner: root
    group: root
    mode: '0600'
  when: not acme_file_stat.stat.exists

- name: Ensure traefik container is running
  community.docker.docker_container:
    name: traefik
    image: traefik:v3.1.2
    container_default_behavior: compatibility
    pull: "always"
    read_only: true
    restart_policy: always
    networks:
      - name: web
    ports:
      - "81:80"
      - "440:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "{{ app_data_dir }}/traefik/data/traefik.yml:/traefik.yml:ro"
      - "{{ app_data_dir }}/traefik/data/configs:/configs:ro"
      - "{{ app_data_dir }}/traefik/data/acme.json:/acme.json:rw"
      - "{{ app_data_dir }}/traefik/data/logs:/logs:rw"
    env:
      TZ: "{{ timezone }}"
      CF_DNS_API_TOKEN: "{{ CF_KEY }}"
    security_opts:
      - "no-new-privileges:true"
    labels:
      net.unraid.docker.icon: "https://doc.traefik.io/traefik/assets/images/logo-traefik-proxy-logo.svg"
      net.unraid.docker.managed: "dockerman"
      #net.unraid.docker.webui: http://[IP]:[PORT:7878]
      traefik.enable: "true"
      traefik.http.routers.traefik-dashboard.rule: "Host(`proxy.{{ DOMAIN }}`) && (PathPrefix(`/dashboard`) || PathPrefix(`/api`))"
      traefik.http.routers.traefik-dashboard.entrypoints: "https"
      traefik.http.routers.traefik-dashboard.service: "api@internal"
      traefik.http.routers.traefik-dashboard.tls.certresolver: "letsencrypt"
      # Middleware for basic auth
      traefik.http.middlewares.traefik-auth.basicauth.users: "{{ username }}:{{ PASSWORD_HASH }}"
      # Middleware for headers (prevent indexing)
      traefik.http.middlewares.traefik-dashboard-redirect.headers.customresponseheaders.X-Robots-Tag: "noindex,nofollow"
      # Attach both middlewares to the dashboard route
      traefik.http.routers.traefik-dashboard.middlewares: "traefik-auth, traefik-dashboard-redirect, @file"
    log_driver: "json-file"
    log_options:
      max-file: "1"
      max-size: "10m"
