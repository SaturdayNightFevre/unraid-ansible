---
#- name: Include SSL certificate tasks
#import_tasks: ssl.yml

- name: Ensure the base Traefik directory exists
  ansible.builtin.file:
    path: "{{ app_data_dir }}/traefik"
    state: directory
    mode: "0755"

- name: Deploy the Traefik configuration using a template
  ansible.builtin.template:
    src: "traefik.yml.j2"
    dest: "{{ app_data_dir }}/traefik/traefik.yml" # This is a file, not a directory
    owner: root
    group: root
    mode: "0644"
    backup: false

- name: Deploy the Traefik dynamic configuration using a template
  ansible.builtin.template:
    src: "traefik-dynamic.yml.j2"
    dest: "{{ app_data_dir }}/traefik/configs/traefik_dynamic.yml" # This is a file, not a directory
    owner: root
    group: root
    mode: "0644"
    backup: false

- name: Check if the acme.json file exists
  ansible.builtin.stat:
    path: "{{ app_data_dir }}/traefik/acme.json"
  register: acme_file_stat

- name: Create the acme.json file if it doesn't exist
  ansible.builtin.file:
    path: "{{ app_data_dir }}/traefik/acme.json" # Ensure this is a file
    state: touch # This ensures it is a file, not a directory
    owner: root
    group: root
    mode: "0600"
  when: not acme_file_stat.stat.exists

- name: Ensure Traefik container is running
  ansible.builtin.include_tasks: ../../../shared-tasks/docker-app.yml
  vars:
    app_name: traefik
    app_image: traefik:v3.1.7
    app_pull: "always"
    app_read_only: true
    app_restart_policy: always
    app_networks:
      - name: web
    app_published_ports:
      - "81:80"
      - "443:443"
    app_dns_servers:
      - "192.168.1.1"
    app_volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "{{ app_data_dir }}/traefik/traefik.yml:/traefik.yml:ro"
      - "{{ app_data_dir }}/traefik/configs:/configs:ro"
      - "{{ app_data_dir }}/traefik/acme.json:/acme.json:rw"
      - "{{ app_data_dir }}/traefik/logs:/logs:rw"
    app_env:
      TZ: "{{ timezone }}"
      CF_DNS_API_TOKEN: "{{ CF_KEY }}"
    app_security_opts:
      - "no-new-privileges:true"
    app_extra_labels:
      traefik.enable: "true"
      traefik.http.routers.api.rule: "Host(`proxy.{{ DOMAIN }}`)"
      traefik.http.routers.api.entrypoints: "https"
      traefik.http.routers.api.service: "api@internal"
      traefik.http.routers.api.tls.certresolver: "letsencrypt"
      traefik.http.middlewares.auth.basicauth.users: "{{ username }}:{{ PASSWORD_HASH }}"
      traefik.http.routers.api.middlewares: "authentik@docker"
    app_icon_url: "https://raw.githubusercontent.com/traefik/traefik/master/docs/content/assets/img/traefik.logo-dark.png?raw=true"
    app_webui_url: "https://proxy.{{ DOMAIN }}"
    app_log_driver: "json-file"
    app_log_options:
      max-file: "1"
      max-size: "10m"
    app_traefik_enable: true

- name: Set up DuckDNS container
  ansible.builtin.include_tasks: ../../../shared-tasks/docker-app.yml
  vars:
    app_name: duckdns
    app_image: lscr.io/linuxserver/duckdns:latest
    app_env:
      PUID: "{{ PUID }}"
      PGID: "{{ PGID }}"
      TZ: "{{ timezone }}"
      SUBDOMAINS: "johnflix"
      TOKEN: "{{ DUCK_DNS_TOKEN }}"
      UPDATE_IP: "ipv4"
    app_volumes:
      - "{{ app_data_dir }}/duckdns/config:/config "
    app_restart_policy: unless-stopped
    app_log_driver: "json-file"
    app_log_options:
      max-file: "1"
      max-size: "10m"
    app_icon_url: "https://www.duckdns.org/img/ducky_icon.png"
    app_traefik_enable: false
