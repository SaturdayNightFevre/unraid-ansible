http:
  middlewares:
    secure:
      chain:
        middlewares:
          - default-hsts
          - ratelimit
          - crowdsec@file
          - authentik@docker
    crowdsec:
      plugin:
        bouncer:
          enabled: true
          defaultDecisionSeconds: 60
          crowdsecMode: live
          crowdsecAppsecEnabled: true # <--- here you can enable appsec waf
          crowdsecAppsecHost: {{ local_ip }}:7422
          crowdsecAppsecFailureBlock: true
          crowdsecAppsecUnreachableBlock: true
          crowdsecLapiKey: {{ crowdsec_api_key | default(CROWDSEC_API) }}
          crowdsecLapiHost: {{ local_ip }}:9876
          crowdsecLapiScheme: http
          crowdsecLapiTLSInsecureVerify: false
          forwardedHeadersTrustedIPs:
            # private class ranges
            - {{ wg_subnet }}
            - {{ subnet }}
            - 172.16.0.0/12
          clientTrustedIPs:
            - {{ wg_subnet }}
            - {{ subnet }}
            - 172.16.0.0/12

    internal-ipallowlist:
      ipAllowList:
        sourceRange:
          - {{ subnet }}
          - {{ wg_subnet }}

    default-hsts:
      headers:
        customResponseHeaders:
          Strict-Transport-Security: "max-age=63072000; includeSubDomains; preload"
        sslRedirect: true
        sslForceHost: true

    ratelimit:
      rateLimit:
        average: 100
        burst: 50

  routers:
    homeassistant:
      entryPoints:
        - https
      rule: "Host(`homeassistant.{{ domain }}`)"
      service: homeassistant
      tls:
        certResolver: letsencrypt
      middlewares:
        - secure@file
    homeassistant-app-auth:
      rule: "Host(`homeassistant.{{ domain }}`) && ( (PathPrefix(`/auth/`)) && !(PathPrefix(`/auth/token`)) )"
      service: homeassistant
      tls: true
      entryPoints:
        - https
      middlewares:
        - secure@file

  services:
    homeassistant:
      loadBalancer:
        servers:
          - url: "http://192.168.1.11:8123"
        passHostHeader: false